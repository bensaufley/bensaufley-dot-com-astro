---
import type { GetStaticPaths } from 'astro';
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';
import { getCollection, type InferEntrySchema } from 'astro:content';
import dayjs from 'dayjs';
import { basename, extname } from 'path';

import BaseLayout from '~layouts/BaseLayout.astro';

import styles from '~components/reading/styles.module.css';

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = (await getCollection('books', (book) => !!book.data.finishedAt && !!book.body?.trim())).toSorted(
    (a, b) => dayjs.utc(b.data.finishedAt).diff(a.data.finishedAt, 'day'),
  );

  return Promise.all(
    posts.map(async (post) => {
      const { Content } = await post.render();

      return {
        post,
        props: { Content, ...post.data },
        params: { slug: basename(post.id, extname(post.id)) },
      };
    }),
  );
};

export type Props = InferEntrySchema<'books'> & {
  Content: AstroComponentFactory;
};

const {
  params: { slug },
  props: { Content, ...book },
} = Astro;
---

<BaseLayout url={`/reading/book/${slug}`} title={book.title}>
  <div class={styles.bookReview}>
    <h2>{book.title}</h2>
    {book.subtitle && <h3>{book.subtitle}</h3>}

    <Content />
  </div>
</BaseLayout>
