---
import Goodreads from '@phosphor-icons/core/regular/goodreads-logo.svg?react';
import dayjs from 'dayjs';

import type { BookFrontmatter } from '~content/config';

import Bookshop from '../../assets/images/brand-bookshop.svg?react';
import Hardcover from '../../assets/images/brand-hardcover-tinted.svg?react';
import Libro from '../../assets/images/brand-libro.svg?react';

import CoverImage from './CoverImage';
import Rating from './Rating';
import { LEFT_GOODREADS_DATE } from './Read.astro';

import styles from './styles.module.css';

export interface Props {
  book: BookFrontmatter;
  slug: string;
  hasReview: boolean;
}

const { book, hasReview, slug } = Astro.props;
---
<li class={styles.book}>
  <CoverImage book={book} />
  <h3>
    <div class={styles.icons}>
      {book.isbn13 && (
        <a href={`https://bookshop.org/book/${book.isbn13}`} target="_blank" rel="noopener">
          <Bookshop />
        </a>
      )}
      {book.isbn13 && (
        <a href={`https://libro.fm/audiobooks/${book.isbn13}`} target="_blank" rel="noopener">
          <Libro />
        </a>
      )}
      {book.hardcoverUrl && <a href={book.hardcoverUrl} target="_blank" rel="noopener" title="View in Hardcover"><Hardcover /></a>}
      {LEFT_GOODREADS_DATE.isAfter(book.read, 'day') && (
        <span title="Imported from Goodreads">
          <Goodreads />
        </span>
      )}
    </div>
    {hasReview ? <a href={`/reading/book/${slug}`}>{book.title}</a> : book.title}
  </h3>
  <p class={styles.author}>
    by {book.authors.map(({ firstName, lastName }) => `${firstName} ${lastName}`).join(', ')}
  </p>
  <Rating client:load rating={book.rating} />
  <p class={styles.finished}>
    Finished{' '}
    <time datetime={dayjs.utc(book.read!).toISOString()}>{dayjs.utc(book.read!).format('YYYY-MM-DD')}</time>
  </p>
  <div class={styles.review}><slot /></div>
</li>
