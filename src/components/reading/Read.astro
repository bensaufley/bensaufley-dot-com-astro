---
import Goodreads from '@phosphor-icons/core/regular/goodreads-logo.svg?react';
import { getCollection } from 'astro:content';
import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';

import Pagination from '~components/Pagination';

import Bookshop from '../../assets/images/brand-bookshop.svg?react';
import Libro from '../../assets/images/brand-libro.svg?react';

import Rating from './Rating';

import styles from './styles.module.css';

export interface Props {
  page: number;
}

dayjs.extend(utc);

const { page } = Astro.props;

export const PER_PAGE = 10;
const allBooks = (await getCollection('books', (book) => !!book.data.read)).toSorted((a, b) => dayjs.utc(b.data.read).diff(a.data.read, 'day'));

const pages = Math.ceil(allBooks.length / PER_PAGE);
const books = await Promise.all(
  allBooks.slice(page * PER_PAGE, (page + 1) * PER_PAGE)
    .map(async (book) => {
      const { Content} = await book.render();
      return {...book, Content };
    }),
  );

// Not an exact date, but before this point everything is Goodreads
export const LEFT_GOODREADS_DATE = dayjs('2022-02-15');
---

<div class={styles.read}>
  <h3>Read</h3>

  <ul class={styles.books}>
    {books
      .map(({ Content, ...book }) => (
        <li class={styles.book}>
          <h3>
            <div class={styles.icons}>
              {book.data.isbn13 && <a href={`https://bookshop.org/book/${book.data.isbn13}`} target="_blank" rel="noopener"><Bookshop /></a>}
              {book.data.isbn13 && <a href={`https://libro.fm/audiobooks/${book.data.isbn13}`} target="_blank" rel="noopener"><Libro /></a>}
              {LEFT_GOODREADS_DATE.isAfter(book.data.read, 'day') && <span title="Imported from Goodreads"><Goodreads /></span>}
            </div>
            {book.data.title}
          </h3>
          <p class={styles.author}>by {book.data.authors.map(({ firstName, lastName }) => `${firstName} ${lastName}`).join(', ')}</p>
          <Rating client:load rating={book.data.rating} />
          <p class={styles.finished}>Finished <time datetime={dayjs.utc(book.data.read!).toISOString()}>{dayjs.utc(book.data.read!).format('YYYY-MM-DD')}</time></p>
          <div class={styles.review}><Content /></div>
        </li>
      ))}
  </ul>

  <Pagination page={page} pages={pages} path="/reading/" />
</div>
