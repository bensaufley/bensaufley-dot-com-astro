@import url('../../shared/variables.css');
@import url('../../shared/mixins.css');

.hud {
  display: grid;
  gap: 1rem;

  @media (width >= 60em) {
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
  }

  .nowReading,
  .upNext {
    h3 + p {
      margin-top: 0;
    }
  }

  .hint {
    font-style: italic;
    font-size: 0.875rem;
    opacity: 0.8;
  }

  ul {
    list-style: none;
    padding: 1rem;
    margin: 0 -1rem;
    display: flex;
    flex-flow: row nowrap;
    gap: 1rem;
    overflow-x: auto;

    object {
      max-height: 4.5rem;
      width: 3rem;
    }

    a:link,
    a:visited {
      &::after {
        display: none;
      }
    }
  }
}

@property --ratingAnimation {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

.read {
  .books {
    list-style: none;
    padding: 0;
    width: 100%;

    display: grid;
    grid-template-columns: min(15%, 4rem) 1fr 1fr 1fr;
    grid-auto-rows: auto;
  }

  .book {
    display: grid;
    grid-column: 1 / -1;
    grid-template:
      'cover title title title' auto
      'cover author finished rating' auto
      '. review review review' auto / min(15%, 4rem) 1fr 1fr 1fr;
    grid-template-columns: subgrid;
    gap: 0 0.5rem;
    align-items: center;
    margin-bottom: 1rem;
    position: relative;

    .cover {
      align-items: center;
      container-type: inline-size;
      display: flex;
      flex-flow: row nowrap;
      grid-area: cover;
      justify-content: center;
      margin-right: 0.5rem;

      img {
        height: auto;
        max-height: 100cqw;
        max-width: 100%;
      }
    }

    h3,
    p {
      margin: 0;
    }

    h3 {
      font-size: 1rem;
      color: color-mix(in srgb, var(--accentColor), var(--mainColor));
      grid-area: title;

      a,
      span {
        small {
          font-family: $sansStack;
          margin-left: 0.5rem;
        }
      }
    }

    p {
      font-size: 0.875rem;
    }

    p.author {
      grid-area: author;
      font-style: italic;
    }

    p.finished {
      grid-area: finished;
      justify-self: flex-end;
    }

    .rating {
      grid-area: rating;
    }

    .review {
      grid-area: review;

      p + p,
      p + x-spoiler:has(p),
      x-spoiler:has(p) + p {
        margin-top: 1rem;
      }

      &:not(:empty) {
        margin-top: 1rem;
      }
    }
  }

  .icons {
    align-items: center;
    display: inline-flex;
    flex-flow: row wrap;
    float: right;
    gap: 0.5rem;
    margin-left: 0.5rem;
    vertical-align: baseline;

    span {
      width: 1rem;
      height: 1rem;
    }

    svg {
      height: 1rem;
      width: 1rem;
    }

    a:link,
    a:visited {
      &::after {
        display: none;
      }

      &:hover {
        transform: scale(1.25);

        @media (prefers-reduced-motion: no-preference) {
          transition: transform 300ms;
        }
      }
    }
  }

  .rating {
    --circleSize: 1rem;

    background-image: linear-gradient(
      to right,
      var(--secondaryAccentColor) 20%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 25%) 20%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 25%) 40%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 50%) 40%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 50%) 60%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 80%) 60%,
      color-mix(in srgb, var(--secondaryAccentColor), var(--accentColor) 80%) 80%,
      var(--accentColor) 80%
    );
    mask:
      radial-gradient(
        circle at 10% calc(var(--circleSize) * 1.1 / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 30% calc(var(--circleSize) * 1.1 / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 50% calc(var(--circleSize) * 1.1 / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 70% calc(var(--circleSize) * 1.1 / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 90% calc(var(--circleSize) * 1.1 / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) * 0.45),
        #999 calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      linear-gradient(
          to left,
          #fff,
          #fff calc(var(--rating) / 5 * 100% * var(--ratingAnimation)),
          transparent calc(var(--rating) / 5 * 100% * var(--ratingAnimation))
        )
        intersect,
      radial-gradient(
        circle at 10% calc(var(--circleSize) * 1.1 / 2),
        #fff,
        #fff calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 30% calc(var(--circleSize) * 1.1 / 2),
        #fff,
        #fff calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 50% calc(var(--circleSize) * 1.1 / 2),
        #fff,
        #fff calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 70% calc(var(--circleSize) * 1.1 / 2),
        #fff,
        #fff calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      ),
      radial-gradient(
        circle at 90% calc(var(--circleSize) * 1.1 / 2),
        #fff,
        #fff calc(var(--ratingAnimation) * var(--circleSize) / 2),
        transparent calc(var(--ratingAnimation) * var(--circleSize) / 2)
      );
    mask-mode: luminance;
    height: calc(var(--circleSize) * 1.1);
    width: calc(var(--circleSize) * 5 + var(--circleSize) * 4 * 0.25);
    justify-self: flex-end;

    &.visible {
      @media (prefers-reduced-motion: no-preference) {
        animation: showRating 500ms 100ms ease-in-out forwards;
      }
      @media (prefers-reduced-motion: reduce) {
        --ratingAnimation: 1;
      }
    }
  }
}

@keyframes showRating {
  0% {
    --ratingAnimation: 0;
  }
  75% {
    --ratingAnimation: 1.1;
  }
  100% {
    --ratingAnimation: 1;
  }
}

.cover {
  img,
  object {
    border-radius: 3px;
  }

  a&:link,
  a&:visited {
    display: block;

    &::after {
      display: none;
    }

    @media (prefers-reduced-motion: no-preference) {
      transition: filter 300ms ease-in-out;
      filter: drop-shadow(0 0 0 rgba(0 0 0 / 0.8));

      img,
      object {
        transform: rotate(0deg) scale(1);
        transition: transform 300ms ease-in-out;
      }

      &:hover {
        filter: drop-shadow(0 6px 6px rgba(0 0 0 / 0.3));

        img,
        object {
          transform: rotate(-3deg) scale(1.1);
        }
      }
    }
  }
}

.bookReview {
  h3 {
    font-family: $sansStack;
  }
}

.ratings {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto repeat(9, 1fr);
  column-gap: 0.5rem;
  grid-auto-flow: column;
  padding: 1rem;
  border-radius: 3px;
  background-color: rgba(from var(--navBg) r g b / calc(0.15));
  margin: 1rem 0;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1) inset;

  h3 {
    grid-column: 1 / -1;
    grid-row: 1 / span 1;
    margin: 0;
  }

  .ratingLabel {
    border: 2px solid transparent;
    border-top: 0;
    text-align: center;
    transition: border-color 300ms;
  }

  .ratingValue {
    display: grid;
    font-size: 0.875rem;
    grid-column: 1 / -1;
    grid-template-columns: subgrid;

    &::after {
      display: none;
    }

    /** Waiting for sibling-index()
     * https://nerdy.dev/sibling-index
     * --ratingNo: sibling-index();
     */
    &:nth-child(1 of .ratingValue) {
      --ratingNo: 1;
    }

    &:nth-child(2 of .ratingValue) {
      --ratingNo: 2;
    }

    &:nth-child(3 of .ratingValue) {
      --ratingNo: 3;
    }

    &:nth-child(4 of .ratingValue) {
      --ratingNo: 4;
    }

    &:nth-child(5 of .ratingValue) {
      --ratingNo: 5;
    }

    &:nth-child(6 of .ratingValue) {
      --ratingNo: 6;
    }

    &:nth-child(7 of .ratingValue) {
      --ratingNo: 7;
    }

    &:nth-child(8 of .ratingValue) {
      --ratingNo: 8;
    }

    &:nth-child(9 of .ratingValue) {
      --ratingNo: 9;
    }

    &:hover {
      .ratingBar::before,
      .ratingLabel {
        border-color: rgb(from var(--mainColor) r g b / 0.5);
      }
    }
  }

  .ratingBar {
    align-items: center;
    display: flex;
    flex-flow: row nowrap;
    gap: 0.5rem;

    &::before {
      background-color: color-mix(
        in srgb,
        var(--accentColor),
        var(--secondaryAccentColor) calc((var(--ratingNo) - 1) / 8 * 100%)
      );
      border: 2px solid transparent;
      border-bottom: 0;
      border-radius: 0 3px 3px 0;
      content: '';
      display: block;
      height: 100%;
      transition: border-color 300ms;
      width: var(--ratingBookPct);
    }
  }

  @mixin tablet {
    grid-template-columns: repeat(9, 1fr);
    grid-template-rows: auto 15vh 1fr;
    grid-auto-flow: row;
    column-gap: 1rem;

    .ratingValue {
      grid-column: auto / span 1;
      grid-row: 2 / -1;
      grid-template-rows: subgrid;
      grid-template-columns: 1fr;
    }

    .ratingLabel {
      background-color: rgba(from var(--navBg) r g b / calc(0.15));
      border-radius: 0 0 3px 3px;
      order: 2;
      padding: 1rem 0.5rem;
    }

    .ratingBar {
      order: 1;
      flex-direction: column-reverse;
      justify-content: flex-start;

      &::before {
        width: 100%;
        height: var(--ratingBookPct);
        border-radius: 3px 3px 0 0;
      }
    }
  }
}
