---
import type { SvgComponent } from 'astro/types';
import clsx from 'clsx';
import { basename, extname, relative, resolve } from 'node:path';

import type { Frontmatter } from '~pages/types';

import ThemePicker from '../ThemePicker';

import NavItem from './NavItem.astro';

import styles from './styles.module.css';

interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

const topLevelPages = Object.entries<{ frontmatter: Frontmatter; Icon?: SvgComponent }>(
  import.meta.glob('../../pages/{*.astro,*.md,*.mdx,*/index.astro,*/index.md,*/index.mdx}', {
    eager: true,
  }),
)
  .filter(([filename]) => !/404/.test(filename))
  .map(([filename, { frontmatter: fm, Icon }]) => {
    const path = `/${relative(resolve('../../pages'), filename)}`;
    const ext = extname(path);
    const isIndex = basename(path, ext) === 'index';
    return {
      Icon,
      data: {
        path: path.slice(0, isIndex ? -`index${ext}`.length : -ext.length).replace(/\/?$/, '/'),
        ...fm,
      },
    };
  })
  .toSorted(({ data: a }, { data: b }) => {
    if (a.order === undefined && b.order === undefined) return a.title.localeCompare(b.title);
    if (a.order === undefined) return 1;
    if (b.order === undefined) return -1;
    return a.order - b.order;
  });
---

<header class={clsx('sticky', styles.pageHeader)}>
  <h2 class={styles.name}>
    <span class={styles.firstName}>Ben</span>
    <span class={styles.lastName}>Saufley</span>
  </h2>
  <h3 class={styles.position}>
    Software <br class={styles.desktopBreak} />
    Engineering Leader
  </h3>
</header>
<nav class={clsx('sticky', styles.stickyNav)}>
  <a href="/" class={styles.name}> BS</a>
  <ul>
    {topLevelPages.map(({ data, Icon }) => <NavItem currentPath={currentPath} {data} icon={Icon} />)}
  </ul>
  <ThemePicker context="header" client:only="solid-js" />
</nav>
